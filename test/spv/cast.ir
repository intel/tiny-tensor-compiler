; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-oc -gspirv -O0 < %s | filecheck %s

; CHECK: OpCapability Int8
; CHECK: OpCapability Int64
; CHECK: %[[#I64:]] = OpTypeInt 64 0
; CHECK: %[[#I8:]] = OpTypeInt 8 0
; CHECK: %[[#F32:]] = OpTypeFloat 32
; CHECK: %[[#F64:]] = OpTypeFloat 64
; CHECK: %[[#C64:]] = OpTypeVector %[[#F64]] 2
; CHECK: %[[#C64_NULL:]] = OpConstantNull %[[#C64]]

func @tint(%a: i64) {
    %0 = cast %a : i64 -> i64
    %1 = cast %a : i64 -> i8
    %2 = cast %a : i64 -> f32
    %3 = cast %a : i64 -> c64
; CHECK:      %[[#]] = OpCopyObject %[[#I64]] %[[#]]
; CHECK-NEXT: %[[#]] = OpSConvert %[[#I8]] %[[#]]
; CHECK-NEXT: %[[#]] = OpConvertSToF %[[#F32]] %[[#]]
; CHECK-NEXT: %[[#I64_TO_F64:]] = OpConvertSToF %[[#F64]] %[[#]]
; CHECK-NEXT: %[[#]] = OpCompositeInsert %[[#C64]] %[[#I64_TO_F64]] %[[#C64_NULL]] 0
}

func @tfloat(%a: f32) {
    %1 = cast %a : f32 -> i8
    %2 = cast %a : f32 -> f64
    %3 = cast %a : f32 -> c64
; CHECK:      %[[#]] = OpConvertFToS %[[#I8]] %[[#]]
; CHECK-NEXT: %[[#]] = OpFConvert %[[#F64]] %[[#]]
; CHECK-NEXT: %[[#F32_TO_F64:]] = OpFConvert %[[#F64]] %[[#]]
; CHECK-NEXT: %[[#]] = OpCompositeInsert %[[#C64]] %[[#F32_TO_F64]] %[[#C64_NULL]] 0
}

func @tcomplex(%a: c32) {
    %1 = cast %a : c32 -> c64
; CHECK:      %[[#]] = OpFConvert %[[#C64]] %[[#]]
}

func @tfloatcoopmatrix() subgroup_size(16) {
    %0 = constant 1.0 -> coopmatrix<f32x16x4,matrix_a>
    %2 = cast %0  : coopmatrix<f32x16x4,matrix_a> -> coopmatrix<i8x16x4,matrix_a>
; CHECK:      %[[#]] = OpConvertFToS %[[#I8]] %[[#]]
; CHECK-NEXT: %[[#]] = OpConvertFToS %[[#I8]] %[[#]]
; CHECK-NEXT: %[[#]] = OpConvertFToS %[[#I8]] %[[#]]
; CHECK-NEXT: %[[#]] = OpConvertFToS %[[#I8]] %[[#]]
}
