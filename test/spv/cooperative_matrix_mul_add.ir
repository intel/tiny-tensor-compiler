; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-oc -O0 -S < %s | filecheck %s

; CHECK:           %[[#F16:]] = OpTypeFloat 16
; CHECK:           %[[#I32:]] = OpTypeInt 32 0
; CHECK:        %[[#I32_C3:]] = OpConstant %[[#I32]] 3
; CHECK:       %[[#I32_C16:]] = OpConstant %[[#I32]] 16
; CHECK:        %[[#I32_C1:]] = OpConstant %[[#I32]] 1
; CHECK:  %[[#COOP_16x16_B:]] = OpTypeCooperativeMatrixKHR %[[#F16]] %[[#I32_C3]] %[[#I32_C16]] %[[#I32_C16]] %[[#I32_C1]]
; CHECK:        %[[#I32_C8:]] = OpConstant %[[#I32]] 8
; CHECK:        %[[#I32_C0:]] = OpConstant %[[#I32]] 0
; CHECK:   %[[#COOP_8x16_A:]] = OpTypeCooperativeMatrixKHR %[[#F16]] %[[#I32_C3]] %[[#I32_C8]] %[[#I32_C16]] %[[#I32_C0]]
; CHECK:           %[[#F32:]] = OpTypeFloat 32
; CHECK:        %[[#I32_C2:]] = OpConstant %[[#I32]] 2
; CHECK: %[[#COOP_8x16_ACC:]] = OpTypeCooperativeMatrixKHR %[[#F32]] %[[#I32_C3]] %[[#I32_C8]] %[[#I32_C16]] %[[#I32_C2]]

func @coopmatrix_mul_add_ff() subgroup_size(16) {
    parallel {
        %a = constant 1.0 : coopmatrix<f16x16x16,matrix_a>
        %b = constant 2.0 : coopmatrix<f16x16x8,matrix_b>
        %c = constant 3.0 : coopmatrix<f32x16x8,matrix_acc>
        %c_next = cooperative_matrix_mul_add %a, %b, %c : coopmatrix<f32x16x8,matrix_acc>
    }
; CHECK-LABEL:      %[[#]] = OpFunction {{.*}}
; CHECK:       %[[#OP_B:]] = OpCompositeConstruct %[[#COOP_16x16_B]] %[[#]]
; CHECK:       %[[#OP_A:]] = OpCompositeConstruct %[[#COOP_8x16_A]] %[[#]]
; CHECK:       %[[#OP_C:]] = OpCompositeConstruct %[[#COOP_8x16_ACC]] %[[#]]
; CHECK:            %[[#]] = OpCooperativeMatrixMulAddKHR %[[#COOP_8x16_ACC]] %[[#OP_A]] %[[#OP_B]] %[[#OP_C]]
}
