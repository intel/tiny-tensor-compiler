; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-oc -S -O0 < %s | filecheck %s

; CHECK:              %[[#I8:]] = OpTypeInt 8 0
; CHECK:          %[[#I8_PTR:]] = OpTypePointer CrossWorkgroup %[[#I8]]
; CHECK:             %[[#I64:]] = OpTypeInt 64 0
; CHECK:         %[[#I64_C64:]] = OpConstant %[[#I64]] 64
; CHECK:         %[[#I64_C48:]] = OpConstant %[[#I64]] 48
; CHECK:          %[[#I64_C1:]] = OpConstant %[[#I64]] 1
; CHECK:             %[[#I32:]] = OpTypeInt 32 0
; CHECK:          %[[#I32_C3:]] = OpConstant %[[#I32]] 3
; CHECK:         %[[#I32_C32:]] = OpConstant %[[#I32]] 32
; CHECK:         %[[#I32_C16:]] = OpConstant %[[#I32]] 16
; CHECK:          %[[#I32_C1:]] = OpConstant %[[#I32]] 1
; CHECK: %[[#COOP_I8_32x16_B:]] = OpTypeCooperativeMatrixKHR %[[#I8]] %[[#I32_C3]] %[[#I32_C32]] %[[#I32_C16]] %[[#I32_C1]]
; CHECK:          %[[#I32_C0:]] = OpConstant %[[#I32]] 0


func @coopmatrix_a_load_n(%A: memref<i8x64x48>, %x: index, %y: index) subgroup_size(16) {
    parallel {
        %0 = cooperative_matrix_load.n %A[%x,%y], align 64 : coopmatrix<i8x16x32,matrix_a>
    }
; CHECK:                        %[[#]] = OpFunction {{.*}}
; CHECK-NEXT:             %[[#T1_MR:]] = OpFunctionParameter %[[#I8_PTR]]
; CHECK-NEXT:              %[[#T1_X:]] = OpFunctionParameter %[[#I64]]
; CHECK-NEXT:              %[[#T1_Y:]] = OpFunctionParameter %[[#I64]]
; CHECK:       %[[#T1_X_OFFSET:]] = OpIMul %[[#I64]] %[[#T1_X]] %[[#I64_C1]]
; CHECK:       %[[#T1_Y_OFFSET:]] = OpIMul %[[#I64]] %[[#T1_Y]] %[[#I64_C64]]
; CHECK:         %[[#T1_OFFSET:]] = OpIAdd %[[#I64]] %[[#T1_X_OFFSET]] %[[#T1_Y_OFFSET]]
; CHECK:            %[[#T1_PTR:]] = OpInBoundsPtrAccessChain %[[#I8_PTR]] %[[#T1_MR]] %[[#T1_OFFSET]]
; CHECK:                   %[[#]] = OpCooperativeMatrixLoadKHR %[[#COOP_I8_32x16_B]] %[[#T1_PTR]] %[[#I32_C0]] %[[#I64_C64]]
}

func @coopmatrix_a_load_n_checked(%A: memref<i8x64x48>, %x: index, %y: index) subgroup_size(16) {
    parallel {
        %0 = cooperative_matrix_load.n.both_checked %A[%x,%y], align 64 : coopmatrix<i8x16x32,matrix_a>
    }
; CHECK:             %[[#]] = OpFunction {{.*}}
; CHECK-NEXT: %[[#T2_PTR:]] = OpFunctionParameter %[[#I8_PTR]]
; CHECK-NEXT:   %[[#T2_X:]] = OpFunctionParameter %[[#I64]]
; CHECK-NEXT:   %[[#T2_Y:]] = OpFunctionParameter %[[#I64]]
; CHECK:       %[[#T2_P1:]] = OpSConvert %[[#I32]] %[[#T2_Y]]
; CHECK:       %[[#T2_P2:]] = OpSConvert %[[#I32]] %[[#T2_X]]
; CHECK:       %[[#T2_P3:]] = OpSConvert %[[#I32]] %[[#I64_C48]]
; CHECK:       %[[#T2_P4:]] = OpSConvert %[[#I32]] %[[#I64_C64]]
; CHECK:       %[[#T2_P5:]] = OpSConvert %[[#I32]] %[[#I64_C64]]
; CHECK:             %[[#]] = OpCooperativeMatrixLoadCheckedINTEL %[[#COOP_I8_32x16_B]] %[[#T2_PTR]] %[[#T2_P1]] %[[#T2_P2]] %[[#I32_C0]] %[[#T2_P3]] %[[#T2_P4]] %[[#T2_P5]]
}
