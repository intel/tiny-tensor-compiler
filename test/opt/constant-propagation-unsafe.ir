; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-opt -pconstant-propagation -funsafe-fp-math < %s | filecheck %s

func @identity_fadd(%a: f32) {
    %c0 = constant 0.0 : f32
    %0 = arith.add %a, %c0 : f32
    %1 = arith.add %c0, %a : f32
    %2 = arith.add %0, %1 : f32
; CHECK-LABEL: func @identity_fadd({{.*}}
; CHECK: %2 = arith.add %a, %a : f32
}

func @identity_fsub(%a: f32) {
    %c0 = constant 0.0 : f32
    %0 = arith.sub %a, %c0 : f32
    %1 = arith.sub %c0, %a : f32
    %2 = arith.add %0, %1 : f32
; CHECK-LABEL: func @identity_fsub({{.*}}
; CHECK: %2 = arith.add %a, %1 : f32
}

func @identity_fmul0(%a: f32) {
    %c0 = constant 0.0 : f32
    %0 = arith.mul %a, %c0 : f32
    %1 = arith.mul %c0, %a : f32
; CHECK-LABEL: func @identity_fmul0({{.*}}
; CHECK:       %0 = constant 0x0p+0 : f32
; CHECK-NEXT:  %1 = arith.mul %a, %c0 : f32
; CHECK-NEXT:  %2 = constant 0x0p+0 : f32
; CHECK-NEXT:  %3 = arith.mul %c0, %a : f32
}

func @identity_fmul1(%a: f32) {
    %c1 = constant 1.0 : f32
    %0 = arith.mul %a, %c1 : f32
    %1 = arith.mul %c1, %a : f32
    %2 = arith.mul %0, %1 : f32
; CHECK-LABEL: func @identity_fmul1({{.*}}
; CHECK:       %2 = arith.mul %a, %a : f32
}

func @identity_fdiv(%a: f32) {
    %c1 = constant 1.0 : f32
    %0 = arith.div %a, %c1 : f32
    %1 = arith.div %c1, %a : f32
    %2 = arith.mul %0, %1 : f32
; CHECK-LABEL: func @identity_fdiv({{.*}}
; CHECK:       %2 = arith.mul %a, %1 : f32
}

func @identity_cmul1(%a: c32) {
    %c1 = constant [1.0, 0.0] : c32
    %0 = arith.mul %a, %c1 : c32
    %1 = arith.mul %c1, %a : c32
    %2 = arith.mul %0, %1 : c32
; CHECK-LABEL: func @identity_cmul1({{.*}}
; CHECK:       %2 = arith.mul %a, %a : c32
}
