; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-oc < %s | filecheck %s
func @if1(%0: i32) {
    %1 = cmp.lt %0, 16 : i32
    if %1 {
    } else {
    }
; CHECK:      if (x1) {
; CHECK-NEXT: } else {
; CHECK-NEXT: }
}

func @if2(%0: i32) {
    %1 = cmp.lt %0, 16 : i32
    if %1 -> () {
        yield :
    } else {
        yield :
    }
; CHECK:      if (x1) {
; CHECK-NEXT: } else {
; CHECK-NEXT: }
}

func @if3(%0: i32) {
    %1 = cmp.lt %0, 16 : i32
    %x = if %1 -> (i32) {
        yield %0 : i32
    } else {
        yield 16 : i32
    }
; CHECK:      int x;
; CHECK-NEXT: if (x1) {
; CHECK-NEXT:     x = x0;
; CHECK-NEXT: } else {
; CHECK-NEXT:     x = 16;
; CHECK-NEXT: }
}

func @if4(%0: i32) {
    %1 = cmp.lt %0, 16 : i32
    %x, %y = if %1 -> (i32, f32) {
        if %1 {
        }
        yield %0, 1.0 : i32, f32
    } else {
        %z = if %1 -> (f32) {
            yield 1.0 : f32
        } else {
            yield 0.0 : f32
        }
        yield 16, %z : i32, f32
    }
; CHECK:      int x;
; CHECK-NEXT: float y;
; CHECK-NEXT: if (x1) {
; CHECK-NEXT:     if (x1) {
; CHECK-NEXT:     }
; CHECK-NEXT:     x = x0;
; CHECK-NEXT:     y = 0x1p+0f;
; CHECK-NEXT: } else {
; CHECK-NEXT:     float z;
; CHECK-NEXT:     if (x1) {
; CHECK-NEXT:         z = 0x1p+0f;
; CHECK-NEXT:     } else {
; CHECK-NEXT:         z = 0x0p+0f;
; CHECK-NEXT:     }
; CHECK-NEXT:     x = 16;
; CHECK-NEXT:     y = z;
; CHECK-NEXT: }
}
