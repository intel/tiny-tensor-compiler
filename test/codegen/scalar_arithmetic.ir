; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-oc < %s | filecheck %s
func @t1(%a: i32, %b: i32) {
  %1 = add %a, %b : i32
  %2 = sub %a, %b : i32
  %3 = mul %a, %b : i32
  %4 = div %a, %b : i32
  %5 = rem %a, %b : i32
  %6 = neg %a : i32
; CHECK:      int x1 = a + b;
; CHECK-NEXT: int x2 = a - b;
; CHECK-NEXT: int x3 = a * b;
; CHECK-NEXT: int x4 = a / b;
; CHECK-NEXT: int x5 = a % b;
; CHECK-NEXT: int x6 = -a;
}
func @t2(%a: i32, %b: i32) {
  %1 = cmp.eq %a, %b : i32
  %2 = cmp.ne %a, %b : i32
  %3 = cmp.gt %a, %b : i32
  %4 = cmp.ge %a, %b : i32
  %5 = cmp.lt %a, %b : i32
  %6 = cmp.le %a, %b : i32
; CHECK:      bool x1 = a == b;
; CHECK-NEXT: bool x2 = a != b;
; CHECK-NEXT: bool x3 = a > b;
; CHECK-NEXT: bool x4 = a >= b;
; CHECK-NEXT: bool x5 = a < b;
; CHECK-NEXT: bool x6 = a <= b;
}
func @t3(%a: f32, %b: f32) {
  %1 = add %a, %b : f32
  %2 = sub %a, %b : f32
  %3 = mul %a, %b : f32
  %4 = div %a, %b : f32
  %5 = rem %a, %b : f32
  %6 = neg %a : f32
; CHECK:      float x1 = a + b;
; CHECK-NEXT: float x2 = a - b;
; CHECK-NEXT: float x3 = a * b;
; CHECK-NEXT: float x4 = a / b;
; CHECK-NEXT: float x5 = fmod(a, b);
; CHECK-NEXT: float x6 = -a;
}
func @t4(%a: f32, %b: f32) {
  %1 = cmp.eq %a, %b : f32
  %2 = cmp.ne %a, %b : f32
  %3 = cmp.gt %a, %b : f32
  %4 = cmp.ge %a, %b : f32
  %5 = cmp.lt %a, %b : f32
  %6 = cmp.le %a, %b : f32
; CHECK:      bool x1 = a == b;
; CHECK-NEXT: bool x2 = a != b;
; CHECK-NEXT: bool x3 = a > b;
; CHECK-NEXT: bool x4 = a >= b;
; CHECK-NEXT: bool x5 = a < b;
; CHECK-NEXT: bool x6 = a <= b;
}
func @t5(%a: i32) {
  %b = cast %a : i32 -> index
; CHECK: long b = (long) a;
}
