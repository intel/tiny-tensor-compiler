; Copyright (C) 2024 Intel Corporation
; SPDX-License-Identifier: BSD-3-Clause

; RUN: %tinytc-oc < %s | filecheck %s
func @t1(%0: memref<f32x32x16x8x4x42>) {
  %1 = fuse %0[1,3] : memref<f32x32x16x8x4x42>
  %2 = load %1[0,0,0] : memref<f32x32x512x42>
; CHECK: float x2 = *(x1 + 0ll * 1 + 0ll * 32 + 0ll * 16384);
}
func @t2(%0: memref<f32x32x16x?x4x42>) {
  %1 = fuse %0[1,3] : memref<f32x32x16x?x4x42>
  %2 = load %1[0,0,0] : memref<f32x32x?x42,strided<1,32,?>>
; CHECK:      long x1_shape1 = 16 * x0_shape2 * 4;
; CHECK-NEXT: long x1_stride2 = x0_stride4;
; CHECK-NEXT: float x2 = *(x1 + 0ll * 1 + 0ll * 32 + 0ll * x1_stride2);
}
func @t3(%0: memref<f32x32x16x2x2,strided<1,48,768,1536>>) {
  %1 = fuse %0[1,2] : memref<f32x32x16x2x2,strided<1,48,768,1536>>
  %2 = load %1[0,0,0] : memref<f32x32x32x2,strided<1,48,1536>>
; CHECK: float x2 = *(x1 + 0ll * 1 + 0ll * 48 + 0ll * 1536);
}
func @t4(%0: memref<f32x8x?x32,strided<1,?,?>>) {
  %1 = fuse %0[0,1] : memref<f32x8x?x32,strided<1,?,?>>
  %2 = load %1[0,0] : memref<f32x?x32,strided<1,?>>
; CHECK:      long x1_shape0 = 8 * x0_shape1;
; CHECK-NEXT: long x1_stride1 = x0_stride2;
; CHECK-NEXT: float x2 = *(x1 + 0ll * 1 + 0ll * x1_stride1);
}
